При Join особено Outer е силно желателно да използваме ORDER BY, защото в противен случай
engine-а сам решава как да подреди нещата и на различни компютри може да получим
различни резултати.

Ако изпуснем INNER се подбразбира, но е желателно да се пише от гледна точка четимост.

В MySQL няма FULL OUTER JOIN, но с UNION може да обединим LEFT OUTER и RIGHT OUTER и 
получаваме същия резултат.
UNION ALL включва и дублиращите се стойности

При Cross Join няма условие, по което да Join-ваме

Inner Join едната таблица, Inner Join другата таблица ако Join-ваме повече от 2 таблици.

Clustered index може да има само 1 - Primary Key, той влияе и на физическото пазане на данните

Амортизация на индексите - при много триене и променяне на индекси те се амортизират и се 
налага поддръжка (преиндексация на записите), защото иначе engine-а ги отсвирва и почва да си
работи по Primary Key.

При OR клауза има гоооолям шанс да избегне индексите и да си ползва Primary Key.

Искаме ли бързо търсене - правим индекс!
Имаме ли много добавяне и изтриване - индексите се амортизират, остават дупи в паметта, които
не се използват!

**** За изпита - ако имаш условие за дата гледай да не е TIMESTAMP, защото съдържа и час!!!
DATE(e.hire_date) > ....
