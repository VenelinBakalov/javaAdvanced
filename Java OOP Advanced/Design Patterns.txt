Factory
Command Interpreter
Dependency Injection

Strategy Pattern

Composite Design Pattern - примерно един CompositeNotificationService, който съдържа масив от
NotificationService обекти и се подават през конструктора например като varargs, за да може
клиента да работи директно с него, а не с отделните service. Например ако ползваме клас, 
който е написан да приема само 1 service, а ни трябва да работи с няколко - SmsNotificationService,
EmailNotificationService....

Adapter Design Pattern - if you don't own the library. Нямаме достъп до библиотеката (A) Worker,
Robot, Employee, искаме да добавим Recharge Station -> Rechargable. 
Правим си RobotAdapter - адаптер за класа, в който искаме да вкараме нова функционалност.
Този адаптер държи в себе си инстанция от класа, който не притежаваме. И вече през него викаме
Recharge и действаме върху робота.

Chain of Responsibilities Pattern - 

Observer Pattern??